{"version":3,"sources":["Graph/Graph.js","Content/Content.js","Chat/Chat.js","Header/Header.js","NewsFeed/nextitem.js","NewsFeed/newsitem.js","NewsFeed/newsfeed.js","App/App.js","serviceWorker.js","index.js"],"names":["Graph","props","src","className","alt","Content","value","Chat","state","messageList","message","this","setState","text","length","author","type","data","agentProfile","teamName","imageUrl","onMessageWasSent","_onMessageWasSent","bind","showEmoji","Component","Header","style","fontSize","padding","id","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","inline","display","NextItem","classes","ListItem","alignItems","ListItemAvatar","Avatar","avatar","ListItemText","primary","title","secondary","Fragment","Typography","component","variant","color","source","textDecoration","href","link","AlignItemsList","List","articles","map","article","index","avtr","ttl","txt","lnk","Divider","NewsFeed","article_list","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ab03aa2.chunk.js","sourcesContent":["// src/components/Content.js\r\n//npm install react-plotly.js plotly.js\r\nimport React from 'react';\r\nimport './Graph.css';\r\n//import Plot from 'react-plotly.js';\r\n\r\nconst Graph = (props) => {\r\n  // incoming props to determine the graph to fetch\r\n  return (\r\n  \t\t/*<Plot\r\n        data={[\r\n          {\r\n            x: [1, 2, 3],\r\n            y: [2, 6, 3],\r\n            type: 'scatter',\r\n            mode: 'lines+markers',\r\n            marker: {color: 'red'},\r\n          },\r\n          {type: 'bar', x: [1, 2, 3], y: [2, 5, 3]},\r\n        ]}\r\n        layout={ {width: 320, height: 240, title: 'A Fancy Plot'} }\r\n      />*/\r\n      // TODO: replace static image with lamdba call to generate graph\r\n      <img src=\"https://stocksnips.net/wp-content/uploads/2018/05/stock-news-sentiment-vs-stock-price-2.png\" className=\"fin-graph\" alt=\"graph\" />\r\n    );\r\n};\r\n\r\nexport default Graph;","// src/components/Content.js\r\nimport React from 'react';\r\nimport Graph from '../Graph/Graph';\r\n\r\n// import styles\r\nimport './Content.css';\r\n\r\nconst Content = (props) => {\r\n  const graphType = 'sentiment';\r\n  return (\r\n      <div className=\"content\">\r\n        <h1>Financials Graph</h1>\r\n        <div className=\"data-insights\">\r\n          <Graph value={graphType}/>\r\n        </div>\r\n        <div className=\"text-wrapper\">          \r\n            <p>Based on the graphed data above, we recommend purchasing on dates where public sentiment changes from negative to positive.</p>\r\n          </div>\r\n        \r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Content;","import React, {Component} from 'react'\r\nimport {Launcher} from 'react-chat-window'\r\n\r\nclass Chat extends Component {\r\n \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      messageList: []\r\n    };\r\n  }\r\n \r\n  _onMessageWasSent(message) {\r\n    this.setState({\r\n      messageList: [...this.state.messageList, message]\r\n    })\r\n  }\r\n \r\n  _sendMessage(text) {\r\n    if (text.length > 0) {\r\n      this.setState({\r\n        messageList: [...this.state.messageList, {\r\n          author: 'them',\r\n          type: 'text',\r\n          data: { text }\r\n        }]\r\n      })\r\n    }\r\n  }\r\n \r\n  render() {\r\n    return (\r\n    <div className=\"chat-window\">\r\n      <Launcher\r\n        agentProfile={{\r\n          teamName: 'react-chat-window',\r\n          imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\r\n        }}\r\n        onMessageWasSent={this._onMessageWasSent.bind(this)}\r\n        messageList={this.state.messageList}\r\n        showEmoji\r\n      />\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chat;","// src/components/Content.js\r\nimport React from 'react';\r\n// import Icon from '../Icon/Icon'\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport AnnouncementOutlinedIcon from '@material-ui/icons/AnnouncementOutlined';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport './Header.css';\r\n\r\nconst Header = (props) => {\r\n  // incoming props to determine the graph to fetch\r\n  return (\r\n      <div className=\"site-header\">\r\n        <MenuIcon style={{ fontSize: 40, padding:20 }}/>\r\n        <h2 id=\"site-title\">VestEd</h2>\r\n        <div className=\"spacer\"></div>\r\n\r\n        <AnnouncementOutlinedIcon style={{ fontSize: 40, padding:20  }}/>     \r\n        <SettingsOutlinedIcon style={{ fontSize: 40, padding:20 }}/>\r\n\r\n \r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Header;","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './newsitem'\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n}));\r\n\r\nfunction NextItem(props){\r\n  const classes = useStyles();\r\n\r\n    return(        \r\n\r\n    \r\n        \r\n        <ListItem alignItems=\"flex-start\">\r\n        <ListItemAvatar>\r\n          {/* <Avatar alt={props.source} src=\"nyt.png\"/>       TODO:: change avatar to actual logos */}\r\n    <Avatar >{props.avatar}</Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={props.title}\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={classes.inline}\r\n                color=\"textPrimary\"\r\n              >\r\n                {props.source}   {/* just adds a header to the lower text in the news item */}\r\n              </Typography>\r\n              \r\n             <li> { \"â€” \" }{props.text}\r\n                <a style={{ textDecoration: 'none'}} href={props.link}> ... </a>\r\n              </li>\r\n       \r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default NextItem","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport NextItem from './nextitem'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n}));\r\n\r\nexport default function AlignItemsList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n   <div> \r\n  \r\n\r\n    <List className={classes.root}>\r\n\r\n        {props.articles.map(function(article,index){\r\n         \r\n             return ( \r\n                    <li>\r\n                      <NextItem  avatar = {article.avtr} source = {article.src} title ={article.ttl} text = {article.txt} link = {article.lnk} />\r\n                      <Divider variant=\"inset\" component=\"li\" />\r\n                    </li>\r\n                    );\r\n          })}\r\n    \r\n    </List>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport './newsfeed.css';\r\nimport NewsItem from './newsitem';\r\n\r\n\r\n\r\nfunction NewsFeed(props) {\r\n\r\n   \r\n    return (\r\n        <div className=\"NewsFeed\">\r\n          <NewsItem articles = {props.article_list}/>\r\n          </div>\r\n    )\r\n\r\n  }\r\n\r\nexport default NewsFeed;\r\n","// import components\r\nimport React from 'react';\r\nimport Content from '../Content/Content';\r\nimport Chat from '../Chat/Chat';\r\nimport Header from '../Header/Header';\r\nimport NewsFeed from '../NewsFeed/newsfeed';\r\n\r\n// import styles\r\nimport './App.css';\r\nimport '../Chat/Chat.css'\r\n\r\nfunction App() {\r\n  \r\n\r\n\r\n  /* TO GET Dynamic ARTICLES must input a list of articles */\r\n  \r\n  var articles = [ {\r\n    avtr: \"NYT\" ,\r\n    src: \"NY TIMES\",\r\n    ttl:  \"New iPhones Fuel Strong Profit for Apple\",\r\n    txt: \"Apple found renewed growth with an increase in phone sales \", \r\n    lnk: \"https://www.nytimes.com/2020/01/28/technology/apple-iphone-sales-earnings.html\"\r\n  \r\n  },\r\n  {\r\n    avtr: \"BLB\",\r\n    src: \"Bloomberg\", \r\n    ttl: \"Appleâ€™s Once-Sunny China Future Looks Hazy\",\r\n    txt: \"China was supposed to be crucial to Apple Inc.â€™s future  \",\r\n    lnk: \"https://www.bloomberg.com/opinion/articles/2020-01-29/apple-s-once-sunny-china-future-looks-hazy\"\r\n  },\r\n  {\r\n    avtr: \"NYT\", \r\n     src: \"NY TIMES\",\r\n     ttl: \"How the Coronavirus Could Hurt Apple and Starbucks\",\r\n     txt: \"More companies are temporarily halting business \",\r\n     lnk: \"https://www.nytimes.com/2020/01/29/business/dealbook/coronavirus-apple-starbucks.html\"\r\n  },\r\n  {\r\n    avtr:\"ABC\", \r\n    src: \"ABC\",\r\n    ttl: \"Apple temporarily closes stores in China amid virus outbreak\",\r\n    txt: \"Apple is temporarily closing its 42 stores in mainland China, one of its largest markets \", \r\n    lnk: \"https://abcnews.go.com/Business/wireStory/apple-temporarily-closes-stores-china-amid-virus-outbreak-68694240\"\r\n  },\r\n  {\r\n    avtr: \"NBC\",\r\n    src: \"NBC\",\r\n    ttl: \"Apple event: TV, news and video game services signal new direction for iPhone maker\",\r\n    txt: \"The tech giant unveiled a new streaming video offering on Monday as part \",\r\n    lnk: \"https://www.nbcnews.com/tech/apple/apple-event-credit-card-news-subscription-service-signal-new-direction-n986996\"\r\n  \r\n  },\r\n  {\r\n    avtr:\"NBC\",\r\n    src: \"NBC\", \r\n    ttl: \"Apple will make the new Mac Pro in Austin, avoiding some China tariffs\",\r\n    txt: \"Apple will manufacture the next generation of its Mac Pro desktop computer in Austin, Texas, \",\r\n    lnk: \"https://www.cnbc.com/2019/09/23/apple-will-make-the-mac-pro-in-austin-avoiding-some-china-tariffs.html\"\r\n  \r\n  },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header value=\"site-header\"/>\r\n      <div className=\"main\">\r\n        <div className=\"chat-wrapper\">\r\n          <Chat value=\"chatbot\"/>\r\n        </div>\r\n        <Content value=\"Graph\"/>\r\n        <div className=\"news-wrapper\">\r\n          {/* <NewsFeed value = \"newsfeed\" data = {articles}/> */}\r\n          <NewsFeed value = \"newsfeed\" article_list = {articles}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n/*\r\nABOUT:\r\n        <div className=\"content\">\r\n          <h1>About VestEd</h1>\r\n          <p></p>\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n        </div>\r\n\r\n*/\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}